plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'one.microproject.rpi'
archivesBaseName = "rpi-device"
version = '1.1.2'

repositories {
   mavenLocal()
   mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.4'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
}

ext.isSnapshot = version.endsWith("-SNAPSHOT")
if (!project.hasProperty('ossrhUsername') || !project.hasProperty('ossrhPassword')) {
    ext.ossrhUsername = "none";
    ext.ossrhPassword = "****";
    ext.isPublishVersion = false;
} else {
    ext.isPublishVersion = true;
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

tasks.withType(Sign) {
    onlyIf { isPublishVersion }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = 'one.microproject.rpi'
            artifactId = 'rpi-device'
            //version = ...

            from components.java
            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            pom {
                name = 'RPI Device common library'
                description = 'RPI Device common library.'
                url = 'https://github.com/jveverka/rpi-projects/tree/master/rpi-device'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/jveverka/rpi-projects/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'jveverka'
                        name = 'Juraj Veverka'
                        email = 'gergej123@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:jveverka/rpi-projects.git'
                    developerConnection = 'scm:git:git@github.com:jveverka/rpi-projects.git'
                    url = 'https://github.com/jveverka/rpi-projects'
                }
            }
        }
    }
    repositories {
        maven {
            if (isSnapshot) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign configurations.archives
    sign publishing.publications.mavenJava
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}

